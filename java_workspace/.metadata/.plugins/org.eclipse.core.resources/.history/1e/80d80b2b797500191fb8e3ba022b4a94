package test;

import java.util.Arrays;

import lejos.hardware.BrickFinder;
import lejos.hardware.ev3.EV3;
import lejos.hardware.ev3.LocalEV3;
import lejos.hardware.lcd.LCD;
import lejos.hardware.port.Port;
import lejos.hardware.sensor.EV3UltrasonicSensor;
import lejos.hardware.sensor.SensorModes;
import lejos.robotics.RegulatedMotor;
import lejos.robotics.SampleProvider;
import lejos.hardware.motor.EV3LargeRegulatedMotor; 
import lejos.hardware.motor.EV3MediumRegulatedMotor; 

class ObjectDetectionBot { 

	public static void main(String[] args) throws Exception { 
	
		final int MOTOR_BC_STEP_ROTATION = 180;//Размер шага для моторов B и C при вращении на 90 градусов. 
		final int MOTOR_A_STEP_TO_CATCH = 60; //Размер шага для среднего мотора для фиксации цели 
		
		EV3 ev3 = (EV3) BrickFinder.getLocal();
		//Инициализируем моторы. 
		RegulatedMotor motorB = new EV3LargeRegulatedMotor(ev3.getPort("B")); 
		RegulatedMotor motorC = new EV3LargeRegulatedMotor(ev3.getPort("C")); 
		RegulatedMotor motorA = new EV3MediumRegulatedMotor(ev3.getPort("A")); 		
		//Инициализируем датчики. 
		SensorModes sensor1 = new EV3UltrasonicSensor(ev3.getPort("S1")); 
		SensorModes sensor2 = new EV3UltrasonicSensor(ev3.getPort("S2")); 		
		//Получаем поставщика замеров для измерения расстояния. 
		SampleProvider distance1 = sensor1.getMode("Distance"); 
		SampleProvider distance2 = sensor2.getMode("Distance"); 
		//Создаём массив для получения замеров. 
		//Размер массива запрашиваем у поставщика замеров. 
		float[] sample1 = new float[distance1.sampleSize()]; 
		float[] sample2 = new float[distance2.sampleSize()]; 
		LCD.drawString("Подготовка окончена", 0, 0); 
		LCD.drawInt(distance1.sampleSize(), 0, 1); 
		while(true){
			distance1.fetchSample(sample1, 0);
			String str = Arrays.toString(sample1);
			LCD.drawString(str, 0, 3);
		}
		


	} 
}

